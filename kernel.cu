
/*
 * This code was generated by Spiral 8.4.1, www.spiral.net
 */

#include <stdint.h>
__device__ double P1[1024];
__device__ double P2[1024];

extern "C" __global__ void ker_mddft_spiral0(double  *Y, double  *X, double  *sym){
    if(threadIdx.x == 0) {
        printf("Hello from kernel!!!\n");
    }
    double a155, a156, a165, a166, s61, s62, s63, s64, 
            s65, s66, s67, s68, s69, s70, s71, s72, 
            s73, s74, s75, s76, s77, s78, s79, s80, 
            t197, t198, t199, t200, t201, t202, t203, t204, 
            t205, t206, t207, t208, t209, t210, t211, t212, 
            t213, t214, t215, t216, t217, t218, t219, t220, 
            t221, t222, t223, t224;
    int a147, a148, a149, a150, a151, a152, a153, a154, 
            a157, a158, a159, a160, a161, a162, a163, a164;
    a147 = ((128*blockIdx.y) + (16*blockIdx.x));
    s61 = X[a147];
    a148 = (a147 + 1);
    s62 = X[a148];
    a149 = (a147 + 8);
    s63 = X[a149];
    a150 = (a147 + 9);
    s64 = X[a150];
    t197 = (s61 + s63);
    t198 = (s62 + s64);
    t199 = (s61 - s63);
    t200 = (s62 - s64);
    a151 = (a147 + 2);
    s65 = X[a151];
    a152 = (a147 + 3);
    s66 = X[a152];
    a153 = (a147 + 10);
    s67 = X[a153];
    a154 = (a147 + 11);
    s68 = X[a154];
    t201 = (s65 + s67);
    t202 = (s66 + s68);
    a155 = (0.70710678118654757*(s65 - s67));
    a156 = (0.70710678118654757*(s66 - s68));
    s69 = (a155 + a156);
    s70 = (a156 - a155);
    a157 = (a147 + 4);
    s71 = X[a157];
    a158 = (a147 + 5);
    s72 = X[a158];
    a159 = (a147 + 12);
    s73 = X[a159];
    a160 = (a147 + 13);
    s74 = X[a160];
    t203 = (s71 + s73);
    t204 = (s72 + s74);
    t205 = (s71 - s73);
    t206 = (s72 - s74);
    a161 = (a147 + 6);
    s75 = X[a161];
    a162 = (a147 + 7);
    s76 = X[a162];
    a163 = (a147 + 14);
    s77 = X[a163];
    a164 = (a147 + 15);
    s78 = X[a164];
    t207 = (s75 + s77);
    t208 = (s76 + s78);
    a165 = (0.70710678118654757*(s76 - s78));
    a166 = (0.70710678118654757*(s75 - s77));
    s79 = (a165 - a166);
    s80 = (a166 + a165);
    t209 = (t197 + t203);
    t210 = (t198 + t204);
    t211 = (t197 - t203);
    t212 = (t198 - t204);
    t213 = (t201 + t207);
    t214 = (t202 + t208);
    t215 = (t201 - t207);
    t216 = (t202 - t208);
    P1[a147] = (t209 + t213);
    P1[a148] = (t210 + t214);
    P1[a149] = (t209 - t213);
    P1[a150] = (t210 - t214);
    P1[a157] = (t211 + t216);
    P1[a158] = (t212 - t215);
    P1[a159] = (t211 - t216);
    P1[a160] = (t212 + t215);
    t217 = (t199 + t206);
    t218 = (t200 - t205);
    t219 = (t199 - t206);
    t220 = (t200 + t205);
    t221 = (s69 + s79);
    t222 = (s70 - s80);
    t223 = (s69 - s79);
    t224 = (s70 + s80);
    P1[a151] = (t217 + t221);
    P1[a152] = (t218 + t222);
    P1[a153] = (t217 - t221);
    P1[a154] = (t218 - t222);
    P1[a161] = (t219 + t224);
    P1[a162] = (t220 - t223);
    P1[a163] = (t219 - t224);
    P1[a164] = (t220 + t223);
}

__global__ void ker_mddft_spiral1() {
    double a318, a319, a320, a321, s141, s142, s143, s144, 
            s145, s146, s147, s148, s149, s150, s151, s152, 
            s153, s154, s155, s156, s157, s158, s159, s160, 
            t349, t350, t351, t352, t353, t354, t355, t356, 
            t357, t358, t359, t360, t361, t362, t363, t364, 
            t365, t366, t367, t368, t369, t370, t371, t372, 
            t373, t374, t375, t376;
    int a317, a322;
    a317 = ((2*blockIdx.y) + (128*blockIdx.x));
    s141 = P1[a317];
    s142 = P1[(a317 + 1)];
    s143 = P1[(a317 + 64)];
    s144 = P1[(a317 + 65)];
    t349 = (s141 + s143);
    t350 = (s142 + s144);
    t351 = (s141 - s143);
    t352 = (s142 - s144);
    s145 = P1[(a317 + 16)];
    s146 = P1[(a317 + 17)];
    s147 = P1[(a317 + 80)];
    s148 = P1[(a317 + 81)];
    t353 = (s145 + s147);
    t354 = (s146 + s148);
    a318 = (0.70710678118654757*(s145 - s147));
    a319 = (0.70710678118654757*(s146 - s148));
    s149 = (a318 + a319);
    s150 = (a319 - a318);
    s151 = P1[(a317 + 32)];
    s152 = P1[(a317 + 33)];
    s153 = P1[(a317 + 96)];
    s154 = P1[(a317 + 97)];
    t355 = (s151 + s153);
    t356 = (s152 + s154);
    t357 = (s151 - s153);
    t358 = (s152 - s154);
    s155 = P1[(a317 + 48)];
    s156 = P1[(a317 + 49)];
    s157 = P1[(a317 + 112)];
    s158 = P1[(a317 + 113)];
    t359 = (s155 + s157);
    t360 = (s156 + s158);
    a320 = (0.70710678118654757*(s156 - s158));
    a321 = (0.70710678118654757*(s155 - s157));
    s159 = (a320 - a321);
    s160 = (a321 + a320);
    t361 = (t349 + t355);
    t362 = (t350 + t356);
    t363 = (t349 - t355);
    t364 = (t350 - t356);
    t365 = (t353 + t359);
    t366 = (t354 + t360);
    t367 = (t353 - t359);
    t368 = (t354 - t360);
    a322 = ((128*blockIdx.y) + (16*blockIdx.x));
    P2[a322] = (t361 + t365);
    P2[(a322 + 1)] = (t362 + t366);
    P2[(a322 + 8)] = (t361 - t365);
    P2[(a322 + 9)] = (t362 - t366);
    P2[(a322 + 4)] = (t363 + t368);
    P2[(a322 + 5)] = (t364 - t367);
    P2[(a322 + 12)] = (t363 - t368);
    P2[(a322 + 13)] = (t364 + t367);
    t369 = (t351 + t358);
    t370 = (t352 - t357);
    t371 = (t351 - t358);
    t372 = (t352 + t357);
    t373 = (s149 + s159);
    t374 = (s150 - s160);
    t375 = (s149 - s159);
    t376 = (s150 + s160);
    P2[(a322 + 2)] = (t369 + t373);
    P2[(a322 + 3)] = (t370 + t374);
    P2[(a322 + 10)] = (t369 - t373);
    P2[(a322 + 11)] = (t370 - t374);
    P2[(a322 + 6)] = (t371 + t376);
    P2[(a322 + 7)] = (t372 - t375);
    P2[(a322 + 14)] = (t371 - t376);
    P2[(a322 + 15)] = (t372 + t375);
}

__global__ void ker_mddft_spiral2(double  *Y) {
    double a475, a476, a477, a478, s221, s222, s223, s224, 
            s225, s226, s227, s228, s229, s230, s231, s232, 
            s233, s234, s235, s236, s237, s238, s239, s240, 
            t502, t503, t504, t505, t506, t507, t508, t509, 
            t510, t511, t512, t513, t514, t515, t516, t517, 
            t518, t519, t520, t521, t522, t523, t524, t525, 
            t526, t527, t528, t529;
    int a474, a479;
    a474 = ((128*blockIdx.y) + (2*blockIdx.x));
    s221 = P2[a474];
    s222 = P2[(a474 + 1)];
    s223 = P2[(a474 + 64)];
    s224 = P2[(a474 + 65)];
    t502 = (s221 + s223);
    t503 = (s222 + s224);
    t504 = (s221 - s223);
    t505 = (s222 - s224);
    s225 = P2[(a474 + 16)];
    s226 = P2[(a474 + 17)];
    s227 = P2[(a474 + 80)];
    s228 = P2[(a474 + 81)];
    t506 = (s225 + s227);
    t507 = (s226 + s228);
    a475 = (0.70710678118654757*(s225 - s227));
    a476 = (0.70710678118654757*(s226 - s228));
    s229 = (a475 + a476);
    s230 = (a476 - a475);
    s231 = P2[(a474 + 32)];
    s232 = P2[(a474 + 33)];
    s233 = P2[(a474 + 96)];
    s234 = P2[(a474 + 97)];
    t508 = (s231 + s233);
    t509 = (s232 + s234);
    t510 = (s231 - s233);
    t511 = (s232 - s234);
    s235 = P2[(a474 + 48)];
    s236 = P2[(a474 + 49)];
    s237 = P2[(a474 + 112)];
    s238 = P2[(a474 + 113)];
    t512 = (s235 + s237);
    t513 = (s236 + s238);
    a477 = (0.70710678118654757*(s236 - s238));
    a478 = (0.70710678118654757*(s235 - s237));
    s239 = (a477 - a478);
    s240 = (a478 + a477);
    t514 = (t502 + t508);
    t515 = (t503 + t509);
    t516 = (t502 - t508);
    t517 = (t503 - t509);
    t518 = (t506 + t512);
    t519 = (t507 + t513);
    t520 = (t506 - t512);
    t521 = (t507 - t513);
    a479 = ((2*blockIdx.y) + (16*blockIdx.x));
    Y[a479] = (t514 + t518);
    Y[(a479 + 1)] = (t515 + t519);
    Y[(a479 + 512)] = (t514 - t518);
    Y[(a479 + 513)] = (t515 - t519);
    Y[(a479 + 256)] = (t516 + t521);
    Y[(a479 + 257)] = (t517 - t520);
    Y[(a479 + 768)] = (t516 - t521);
    Y[(a479 + 769)] = (t517 + t520);
    t522 = (t504 + t511);
    t523 = (t505 - t510);
    t524 = (t504 - t511);
    t525 = (t505 + t510);
    t526 = (s229 + s239);
    t527 = (s230 - s240);
    t528 = (s229 - s239);
    t529 = (s230 + s240);
    Y[(a479 + 128)] = (t522 + t526);
    Y[(a479 + 129)] = (t523 + t527);
    Y[(a479 + 640)] = (t522 - t526);
    Y[(a479 + 641)] = (t523 - t527);
    Y[(a479 + 384)] = (t524 + t529);
    Y[(a479 + 385)] = (t525 - t528);
    Y[(a479 + 896)] = (t524 - t529);
    Y[(a479 + 897)] = (t525 + t528);
}

